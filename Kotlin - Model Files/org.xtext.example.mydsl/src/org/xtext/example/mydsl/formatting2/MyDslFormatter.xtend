/*
 * generated by Xtext 2.30.0
 */
package org.xtext.example.mydsl.formatting2

import com.google.inject.Inject
import kotlinMetaModel.KotlinProgram
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.example.mydsl.services.MyDslGrammarAccess

class MyDslFormatter extends AbstractFormatter2 {
	
	@Inject extension MyDslGrammarAccess

	def dispatch void format(KotlinProgram kotlinProgram, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (type : kotlinProgram.types) {
			type.format
		}
		for (comment : kotlinProgram.comments) {
			comment.format
		}
		for (_class : kotlinProgram.classes) {
			_class.format
		}
		for (function : kotlinProgram.functions) {
			function.format
		}
	}

	def dispatch void format(kotlinMetaModel.Class _class, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (property : _class.attributes) {
			property.format
		}
		for (function : _class.functions) {
			function.format
		}
	}
	
	// TODO: implement for Function, Body
}
