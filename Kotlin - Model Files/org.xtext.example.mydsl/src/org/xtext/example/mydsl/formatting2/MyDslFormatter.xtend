/*
 * generated by Xtext 2.30.0
 */
package org.xtext.example.mydsl.formatting2

import com.google.inject.Inject
import kotlinMetaModel.Function
import kotlinMetaModel.KotlinProgram
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.example.mydsl.services.MyDslGrammarAccess

class MyDslFormatter extends AbstractFormatter2 {
	
	@Inject extension MyDslGrammarAccess

	def dispatch void format(KotlinProgram kotlinProgram, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (instruction : kotlinProgram.instructions) {
			instruction.format
		}
		for (type : kotlinProgram.type) {
			type.format
		}
	}

	def dispatch void format(Function function, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (instruction : function.instructions) {
			instruction.format
		}
	}
	
	// TODO: implement for FunctionCall, SingleLineComment, MultipleLineComment
}
