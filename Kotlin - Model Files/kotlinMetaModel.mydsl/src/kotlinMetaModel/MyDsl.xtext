// automatically generated by Xtext
grammar kotlinMetaModel.MyDsl with org.eclipse.xtext.common.Terminals

import "http://www.example.org/kotlinMetaModel" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

KotlinProgram returns KotlinProgram:
	{KotlinProgram}
	'KotlinProgram'
	'{'
		('fileName' fileName=EString)?
		('imports' '(' imports+=[Package|EString] ( "," imports+=[Package|EString])* ')' )?
		('instructions' '{' instructions+=Instruction ( "," instructions+=Instruction)* '}' )?
		('type' '{' type+=Type ( "," type+=Type)* '}' )?
	'}';

Instruction returns Instruction:
	ClassDeclaration | Function | VariableDeclaration | VariableAssignement | FunctionCall | ClassConstruction | SingleLineComment | MultipleLineComment;

Type returns Type:
	Int0 | Void | Unit | String0;



Assignment returns Assignment:
	VariableAssignement | FunctionCall | ClassConstruction;



Package returns Package:
	{Package}
	'Package'
	name=EString
	'{'
		('full_path' full_path=EString)?
		('parent' parent=[Package|EString])?
	'}';

EString returns ecore::EString:
	STRING | ID;

ClassDeclaration returns ClassDeclaration:
	{ClassDeclaration}
	'ClassDeclaration'
	name=EString;

Function returns Function:
	'Function'
	name=EString
	'{'
		'return' return=[Type|EString]
		('parameters' '(' parameters+=[VariableDeclaration|EString] ( "," parameters+=[VariableDeclaration|EString])* ')' )?
		('instructions' '{' instructions+=Instruction ( "," instructions+=Instruction)* '}' )?
	'}';

VariableDeclaration returns VariableDeclaration:
	{VariableDeclaration}
	'VariableDeclaration'
	name=EString
	'{'
		('type' type=[Type|EString])?
		('assignment' assignment=[Assignment|EString])?
	'}';

VariableAssignement returns VariableAssignement:
	'VariableAssignement'
	'{'
		'value' value=EString
		('variableDeclaration' variableDeclaration=[VariableDeclaration|EString])?
	'}';

FunctionCall returns FunctionCall:
	'FunctionCall'
	'{'
		('variableDeclaration' variableDeclaration=[VariableDeclaration|EString])?
		'declaredFunction' declaredFunction=[Function|EString]
		('parameterAssignments' '{' parameterAssignments+=Assignment ( "," parameterAssignments+=Assignment)* '}' )?
	'}';

ClassConstruction returns ClassConstruction:
	{ClassConstruction}
	'ClassConstruction'
	'{'
		('variableDeclaration' variableDeclaration=[VariableDeclaration|EString])?
	'}';

SingleLineComment returns SingleLineComment:
	'SingleLineComment'
	'{'
		'line' line=Line
	'}';

MultipleLineComment returns MultipleLineComment:
	'MultipleLineComment'
	'{'
		'line' '{' line+=Line ( "," line+=Line)* '}' 
	'}';

Line returns Line:
	{Line}
	'Line'
	'{'
		('content' content=EString)?
	'}';

Int0 returns Int:
	{Int}
	'Int'
	;

Void returns Void:
	{Void}
	'Void'
	;

Unit returns Unit:
	{Unit}
	'Unit'
	;

String0 returns String:
	{String}
	'String'
	;
